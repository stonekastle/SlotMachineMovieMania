

<style>
    body {
        /*background-image: url("/Images/9-1 WELCOME SCREEN BACKGROUND.png");
        background-repeat: no-repeat;
        background-position: center top;
        background-size: cover;*/
    }

    html, body {
        max-width: 100%;
        overflow-x: hidden;
    }

    #headerStretch {
        max-height: 2000px;
        max-width: 750px;
    }


    .fullscreen-bg {
        position: fixed;
        top: 0;
        right: 0;
        bottom: 0;
        left: 0;
        overflow: hidden;
        z-index: -100;
    }

    .fullscreen-bg__video {
        position: absolute;
        top: 50%;
        left: 50%;
        width: auto;
        height: auto;
        min-width: 100%;
        min-height: 100%;
        -webkit-transform: translate(-50%, -50%);
        -moz-transform: translate(-50%, -50%);
        -ms-transform: translate(-50%, -50%);
        transform: translate(-50%, -50%);
    }

    @@media (max-width: 767px) {
        .fullscreen-bg {
            background: url('/Images/newUserBg.mov') center center / no-repeat;
            background-size: cover;
        }

        .fullscreen-bg__video {
            display: none;
        }
    }
</style>


@*-----------------------------------------------Video Background---------------------------------------------*@
<div class="fullscreen-bg">
    <video loop muted autoplay poster="/Images/newUserBg0000.png" class="fullscreen-bg__video">
        <source src="~/Images/newUserBg.mov" />
    </video>
</div>

@*------------------------------------------------------------------------------------------------------------*@

<div>
@*--------------------------------------------Header/Banner--------------------------------------------------*@
    <div class="col-sm-12">
        <br /><br /><br /><br /><br /><br /><br /><br />
        <center><input type="image" img src="~/Images/8-30-flicktionary-logo-v5-(1)narrow.png" id="headerStretch" /></center>
    </div>
@*-----------------------------------------------------------------------------------------------------------*@


@*----------------------This is used to push the "userImage" away from left edge-----------------------------*@
    <div class="col-sm-3"></div>
@*-----------------------------------------------------------------------------------------------------------*@


@*------------this div is left half and  has player webcam image pushed down from top----------------*@   

    <div class="col-sm-3 offset-col-sm-1" id="lookGreat" style="border-radius:5%; margin:0px; padding:0px; border-style:solid; border-color:#00a6d6">

        <center><h1 id="countdown"></h1></center>

        <center><video id="video" width="475" height="380" autoplay style="border-radius:5%; display:none"></video></center>

        <canvas style="border-radius:5%;" id="canvas" width="475" height="380"></canvas>

    </div>

@*-----------------------------------------------------------------------------------------------------------*@


@*------------this div is right half and has player input-----------------------------------------------------*@

    <div class="col-sm-4 clearBackground" id="inputDiv">
        <h1 style="color:#00629b; font-family:'ATT Aleck Sans'; text-align:center">Smile for the camera</h1>
        <br /></>
        <h3 style="color:#00a6d6; font-family:'ATT Aleck Sans'; text-align:center">Please enter your name:</h3>

        <div class="form-group">
            <center><input type="text" class="form-control" id="userName" /></center>
            <br />
            <h3 style="color:#00629b; font-family:'ATT Aleck Sans'; text-align:center"><strong>Tap the globe</strong></h3>

            <center><input type="image" img src="~/Images/ATT Dan Created.gif" id="submit" class="btn-btn-primary" /></center>
        </div>
    </div>

@*------------------------------------------------------------------------------------------------------------*@
    
</div>





@section Scripts {
    <script src="https://sdk.amazonaws.com/js/aws-sdk-2.19.0.min.js"></script>
    <script type="text/javascript">
        // Elements for taking the snapshot
        var canvas = document.getElementById('canvas');
        var context = canvas.getContext('2d');
        var video = document.getElementById('video');
        var randomNumber = Math.floor(Math.random() * 1000000000);;

        // Get access to the camera!
        if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {
            // Not adding `{ audio: true }` since we only want video now
            navigator.mediaDevices.getUserMedia({ video: true }).then(function (stream) {
                video.src = window.URL.createObjectURL(stream);
                video.play();
            });
        }

        // Trigger photo take and send to AWS
        $(document).ready(function () {
            $("#submit").on("click", createUser)
        })

        var createUser = function () {
            $("#inputDiv").hide();
            $("#video").show();
            $("#canvas").hide();
            $("#countdown").text("3");
            setTimeout(function () {
                $("#countdown").text("2")
                setTimeout(function () {
                    $("#countdown").text("1")
                    setTimeout(function () {
                        $("#countdown").text("")

                        context.drawImage(video, 0, 0, 640, 480);
                        $("#video").hide();
                        $("#canvas").show();

                        var dataURL = canvas.toDataURL('image/jpeg', 1);
                        var blob = dataURItoBlob(dataURL);
                        var fd = new FormData(document.forms[0]);

                        AWS.config.update({
                            "accessKeyId": "",
                            "secretAccessKey": "",
                            "region": "us-east-2"
                        });
                        var s3 = new AWS.S3({ signatureVersion: 'v4' });
                        var params = {
                            Bucket: 'webcam-photos',
                            Key: randomNumber.toString(),
                            ContentType: 'image/jpeg',
                            Body: blob,
                            ACL: 'public-read'
                        };
                        s3.putObject(params, function (err, res) {
                            if (err) {
                                console.log("aws error", err)
                            } else {
                                console.log("aws success")
                                insert();
                            }
                        });
                    }, 1000)
                }, 1000)
            }, 1000)
        }

        var insert = function () {
            var url = "/api/scoreboard/";
            var settings = {
                cache: false
                , contentType: "application/x-www-form-urlencoded; charset=UTF-8"
                , data: "imageURL=https://s3.us-east-2.amazonaws.com/webcam-photos/" + randomNumber + "&name=" + $("#userName").val()
                , dataType: "json"
                , success: function (response) {
                    console.log("post success");
                    setTimeout(function () { window.location.href = "/home/slots/" + response.Item + "/" + randomNumber }, 5000)
                }
                , error: function (response) {
                    console.log("post error", response);
                }
                , type: "POST"
            }
            $.ajax(url, settings);

            // Add code to display message for going to next screen
            // currently just removes some elements for a visual effect, needs polishing

            $(".clearBackground").remove();
            $("#lookGreat").html("<br /><br /><br /><center><h1><strong>Wow, you've got a nice look!</strong></h1></center><br /><center><h1>Now get ready for game time</h1></center>")
        }

        var dataURItoBlob = function (dataURI) {
            // convert base64/URLEncoded data component to raw binary data held in a string
            var byteString;
            if (dataURI.split(',')[0].indexOf('base64') >= 0)
                byteString = atob(dataURI.split(',')[1]);
            else
                byteString = unescape(dataURI.split(',')[1]);

            // separate out the mime component
            var mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0];

            // write the bytes of the string to a typed array
            var ia = new Uint8Array(byteString.length);
            for (var i = 0; i < byteString.length; i++) {
                ia[i] = byteString.charCodeAt(i);
            }

            return new Blob([ia], { type: mimeString });
        }
    </script>
}
