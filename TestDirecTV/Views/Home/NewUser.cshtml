

<style>
    body {
        background-image: url("/Images/TheException.png");
        background-repeat: no-repeat;
        background-position: center top;
        background-size: cover;
    }

    html, body {
        max-width: 100%;
        overflow-x: hidden;
    }
</style>

<div>
    <div class="row">
        <div class="clearBackground">
            <div class="col-sm-4">
                <h1 style="color:beige; font-family:verdana; font-size:500%; text-align:right;">Film Challenge</h1>
            </div>
        </div>
    </div>

    <div class="clearBackground">
        <div class="row">
            <div class="col-sm-6">
                <h1 style="color:moccasin; font-family:verdana; text-align:right">Get ready to smile for the camera</h1>
            </div>
        </div>
    </div>

    <div class="clearBackground">
        <div class="row">
            <div class="col-sm-4">
                <h3 style="color:firebrick; font-family:verdana; text-align:center">Your results will be sent to our scoreboard</h3>
            </div>
        </div>
    </div>
    <div class="row" id="inputDiv">
        <div class="col-sm-6 clearBackground">
            <h3 style="color:firebrick; font-family:verdana; text-align:center">Please enter your name:</h3>
            <div class="form-group">
                <center><input type="text" class="form-control" id="userName" /></center>
                <br />
                <center><button id="submit" class="btn btn-default">Submit Name and Take Picture</button></center>
            </div>
        </div>
    </div>

    <h1 id="countdown"></h1>
    <video id="video" width="640" height="480" autoplay style="display:none"></video>
    <canvas id="canvas" width="640" height="480"></canvas>

    <div class="clearBackground">
        <div class="row">
        <div class="col-sm-6">
            <center><input type="image" img src="~/Images/ATT Dan Created.gif" /></center>
            </div>
        </div>
    </div>
    <br />
    <br />
    <br />
    <br />
    <br />
    <br />
    <br />
    <br />
    <br />
    <br />
    <br />

    <br />
</div>


@section Scripts {
    <script src="https://sdk.amazonaws.com/js/aws-sdk-2.19.0.min.js"></script>
    <script type="text/javascript">
        // Elements for taking the snapshot
        var canvas = document.getElementById('canvas');
        var context = canvas.getContext('2d');
        var video = document.getElementById('video');
        var randomNumber = Math.floor(Math.random() * 1000000000);;

        // Get access to the camera!
        if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {
            // Not adding `{ audio: true }` since we only want video now
            navigator.mediaDevices.getUserMedia({ video: true }).then(function (stream) {
                video.src = window.URL.createObjectURL(stream);
                video.play();
            });
        }

        // Trigger photo take and send to AWS
        $(document).ready(function () {
            $("#submit").on("click", createUser)
        })

        var createUser = function () {
            $("#inputDiv").hide();
            $("#video").show();
            $("#countdown").text("3");
            setTimeout(function () {
                $("#countdown").text("2")
                setTimeout(function () {
                    $("#countdown").text("1")
                    setTimeout(function () {
                        $("#countdown").text("")

                        context.drawImage(video, 0, 0, 640, 480);
                        $("#video").hide();

                        var dataURL = canvas.toDataURL('image/jpeg', 1);
                        var blob = dataURItoBlob(dataURL);
                        var fd = new FormData(document.forms[0]);

                        AWS.config.update({
                            "accessKeyId": "AKIAI5WK3TQOYUVXJPJQ",
                            "secretAccessKey": "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",
                            "region": "us-east-2"
                        });
                        var s3 = new AWS.S3({ signatureVersion: 'v4' });
                        var params = {
                            Bucket: 'webcam-photos',
                            Key: randomNumber.toString(),
                            ContentType: 'image/jpeg',
                            Body: blob,
                            ACL: 'public-read'
                        };
                        s3.putObject(params, function (err, res) {
                            if (err) {
                                console.log("aws error", err)
                            } else {
                                console.log("aws success")
                                insert();
                            }
                        });
                    }, 1000)
                }, 1000)
            }, 1000)
        }

        var insert = function () {
            var url = "/api/scoreboard/";
            var settings = {
                cache: false
                , contentType: "application/x-www-form-urlencoded; charset=UTF-8"
                , data: "imageURL=https://s3.us-east-2.amazonaws.com/webcam-photos/" + randomNumber + "&name=" + $("#userName").val()
                , dataType: "json"
                , success: function (response) {
                    console.log("post success");
                    setTimeout(function () { window.location.href = "/home/slots/" + response.Item + "/" + randomNumber }, 5000)
                }
                , error: function (response) {
                    console.log("post error", response);
                }
                , type: "POST"
            }
            $.ajax(url, settings);

            // Add code to display message for going to next screen
            // currently just removes some elements for a visual effect, needs polishing
            $(".clearBackground").remove();

        }

        var dataURItoBlob = function(dataURI) {
            // convert base64/URLEncoded data component to raw binary data held in a string
            var byteString;
            if (dataURI.split(',')[0].indexOf('base64') >= 0)
                byteString = atob(dataURI.split(',')[1]);
            else
                byteString = unescape(dataURI.split(',')[1]);

            // separate out the mime component
            var mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0];

            // write the bytes of the string to a typed array
            var ia = new Uint8Array(byteString.length);
            for (var i = 0; i < byteString.length; i++) {
                ia[i] = byteString.charCodeAt(i);
            }

            return new Blob([ia], { type: mimeString });
        }
    </script>
}
